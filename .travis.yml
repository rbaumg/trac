language: python
sudo: false
addons:
  apt:
    packages:
      - python-subversion
cache:
  directories:
    - "$HOME/.cache/pip"
    - "$HOME/.pyenv"
    - "$HOME/venv-lib"
    - "$HOME/Library/Caches/Homebrew"
matrix:
  include:
    - os: linux
      python: "2.6"
      env: tracdb=
    - os: linux
      python: "2.6"
      env: tracdb=sqlite
    - os: linux
      python: "2.6"
      env: tracdb=postgres
    - os: linux
      python: "2.6"
      env: tracdb=mysql
    - os: linux
      python: "2.7"
      env: tracdb= build=minimum
    - os: linux
      python: "2.7"
      env: tracdb=
    - os: linux
      python: "2.7"
      env: tracdb=sqlite
    - os: linux
      python: "2.7"
      env: tracdb=postgres
    - os: linux
      python: "2.7"
      env: tracdb=mysql
    - os: osx
      language: generic
      env: pyver=2.6 tracdb=
    - os: osx
      language: generic
      env: pyver=2.6 tracdb=sqlite
    - os: osx
      language: generic
      env: pyver=2.6 tracdb=postgres
    - os: osx
      language: generic
      env: pyver=2.7 tracdb= build=minimum
    - os: osx
      language: generic
      env: pyver=2.7 tracdb=
    - os: osx
      language: generic
      env: pyver=2.7 tracdb=sqlite
    - os: osx
      language: generic
      env: pyver=2.7 tracdb=postgres
before_install:
  - print_version='import sys; print("%d.%d" % sys.version_info[:2])'
  - test -n "$pyver" || pyver="$(python -c "$print_version")"
  - |
    case "$tracdb" in
      postgres)
        if [ "$TRAVIS_OS_NAME" = osx ]; then
          rm -rf /usr/local/var/postgres
          pg_ctl initdb --pgdata /usr/local/var/postgres
          pg_ctl -w start --pgdata /usr/local/var/postgres --log /usr/local/var/postgres/postgresql.log || {
            rc=$?
            cat /usr/local/var/postgres/postgresql.log
            exit $rc
          }
          createuser -s postgres
        fi
        tracdb_version="PostgreSQL: $(psql -U postgres -t -c 'SELECT version()')"
        echo "$tracdb_version"
        psql -U postgres -e -c "CREATE USER tracuser NOSUPERUSER NOCREATEDB CREATEROLE PASSWORD 'password';"
        psql -U postgres -e -c "CREATE DATABASE trac OWNER tracuser;"
        ;;
      mysql)
        tracdb_version="MySQL: $(mysql -u root -sN -e 'SELECT version()')"
        echo "$tracdb_version"
        mysql -u root -v -e "CREATE DATABASE trac DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_bin;"
        mysql -u root -v -e "CREATE USER tracuser@localhost IDENTIFIED BY 'password';"
        mysql -u root -v -e "GRANT ALL ON trac.* TO tracuser@localhost; FLUSH PRIVILEGES;"
        ;;
      *)
        tracdb_version=
        ;;
    esac
  - test -d "$HOME/.pip" || mkdir "$HOME/.pip"
  - |
    {
      echo "[global]"
      echo "cache-dir = $HOME/.cache/pip"
      echo "[list]"
      echo "format = columns"
    } >"$HOME/.pip/pip.conf"
  - |
    if [ "$TRAVIS_OS_NAME" = osx ]; then
      # Pyenv >= 1.2.4 is needed with Python 2.6
      if [[ "$pyver" == 2.6 ]]; then
        # Upgrade pyenv and save formula/bottle in cache.
        formula=$(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula/pyenv.rb
        formula_cached=$(brew --cache)/pyenv.rb
        if [[ ! -f $formula_cached ]]; then
          brew upgrade pyenv &>/dev/null
          cp $formula $formula_cached
        else
          HOMEBREW_NO_AUTO_UPDATE=1 brew upgrade $formula_cached
        fi
      fi
      test -d $HOME/venv-lib || mkdir $HOME/venv-lib
      eval "$(pyenv init -)"
      pyver_latest="$(pyenv install -l | grep -E "^[ ]*${pyver/./\\.}\.[0-9]+$" | tail -1 | tr -d '[:blank:]')"
      venv="$HOME/venv-$pyver_latest"
      pyenv install --skip-existing $pyver_latest
      pyenv shell $pyver_latest
      pip install --upgrade virtualenv
      python -m virtualenv $venv
      source $venv/bin/activate
    fi
  - |
    case "$pyver" in
      2.7)
        pip install --upgrade pip setuptools wheel
        ;;
    esac
  - pyenv --version
  - pyenv versions
  - python --version
  - pip --version
  - pip list
install:
  - |
    if [ "$TRAVIS_OS_NAME" = linux -a "$build" != minimum -a \
         "$(/usr/bin/python -c "$print_version")" = "$(python -c "$print_version")" ]
    then
      print_sitelib='from distutils.sysconfig import get_python_lib; print(get_python_lib())'
      sitelib_global="$(/usr/bin/python -c "$print_sitelib")"
      sitelib_venv="$(python -c "$print_sitelib")"
      ln -s "$sitelib_global/svn" "$sitelib_venv/svn"
      ln -s "$sitelib_global/libsvn" "$sitelib_venv/libsvn"
      python -c 'from svn import core'
    fi
  - |
    requires='Genshi==0.7 lxml twill==0.9.1'
    if [ "$build" != minimum ]; then
      requires="$requires Pygments docutils textile pytz"
      case "$pyver" in
        2.6) requires="$requires Babel<2.6.0" ;;
        *)   requires="$requires Babel" ;;
      esac
    fi
    if [ "$tracdb" = postgres ]; then requires="$requires psycopg2"; fi
    if [ "$tracdb" = mysql ]; then requires="$requires MySQL-python"; fi
    pip install $requires
    python -c 'import sys, pkg_resources as p; p.require(sys.argv[1:])' $requires
    pip list
  - |
    case "$tracdb" in
      sqlite)   tracdb_uri='sqlite:test.db' ;;
      postgres) tracdb_uri='postgres://tracuser:password@localhost/trac?schema=tractest' ;;
      mysql)    tracdb_uri='mysql://tracuser:password@localhost/trac' ;;
      *)        tracdb_uri= ;;
    esac
    echo ".uri = $tracdb_uri" >Makefile.cfg
script:
  - echo "$tracdb_version"
  - |
    targets=Trac.egg-info
    if [ "$build" != minimum ]; then targets="$targets compile"; fi
    targets="$targets unit-test functional-test"
    make $targets
notifications:
  email:
    recipients:
      secure: lIn4a3G6ww61t3o12DS4aWwEwD6Hl2kxcsZgkxvhU2MgzviJ5j3EBV5F/BlbQmR1BqM51qgDOXoQTO+y9cvzAYBkIy/gfLqZjAl0hfZep6iGZgl1cnUW4c5i9+wkF8PzTaQm+q9gwlIQ7JVedWw9jzHBIn80tCgTcavahAzyelk=
